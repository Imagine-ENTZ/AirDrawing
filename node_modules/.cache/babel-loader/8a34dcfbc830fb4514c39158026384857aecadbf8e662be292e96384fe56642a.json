{"ast":null,"code":"var _jsxFileName = \"/Users/younglimmm/AirDrawing/src/MainPage/Component/MediapipeHands.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from \"react\";\nimport Webcam from \"react-webcam\";\nimport { Hands, HAND_CONNECTIONS } from \"@mediapipe/hands/hands\";\nimport { drawConnectors, drawLandmarks } from \"@mediapipe/drawing_utils/drawing_utils\";\nimport { Camera } from \"@mediapipe/camera_utils/camera_utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MediapipeHands() {\n  _s();\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    const hands = new Hands({\n      locateFile: file => {\n        return `https://cdn.jsdelivr.net/npm/@mediapipe/hands@0.3.1626903359/${file}`;\n      }\n    });\n    hands.setOptions({\n      maxNumHands: 1,\n      modelComplexity: 1,\n      minDetectionConfidence: 0.5,\n      minTrackingConfidence: 0.5\n    });\n    hands.onResults(onResults);\n    if (typeof webcamRef.current !== \"undefined\" && webcamRef.current !== null) {\n      const camera = new Camera(webcamRef.current.video, {\n        onFrame: async () => {\n          await hands.send({\n            image: webcamRef.current.video\n          });\n        },\n        width: 1280,\n        height: 720\n      });\n      camera.start();\n    }\n  }, []);\n  const onResults = results => {\n    const videoWidth = webcamRef.current.video.videoWidth;\n    const videoHeight = webcamRef.current.video.videoHeight;\n    canvasRef.current.width = videoWidth;\n    canvasRef.current.height = videoHeight;\n    const canvasElement = canvasRef.current;\n    const canvasCtx = canvasElement.getContext(\"2d\");\n    canvasCtx.save();\n    canvasCtx.clearRect(0, 0, videoWidth, videoHeight);\n    canvasCtx.translate(videoWidth, 0);\n    canvasCtx.scale(-1, 1);\n    canvasCtx.drawImage(results.image, 0, 0, canvasElement.width, canvasElement.height);\n    if (results.multiHandLandmarks) {\n      for (const landmarks of results.multiHandLandmarks) {\n        drawConnectors(canvasCtx, landmarks, HAND_CONNECTIONS, {\n          color: \"#00FF00\",\n          lineWidth: 5\n        });\n        drawLandmarks(canvasCtx, landmarks, {\n          color: \"#FFFFFF\",\n          lineWidth: 2\n        });\n      }\n    }\n    canvasCtx.restore();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Webcam, {\n      audio: false,\n      mirrored: true,\n      ref: webcamRef,\n      style: {\n        position: \"absolute\",\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        left: \"0\",\n        right: \"0\",\n        textAlign: \"center\",\n        zindex: 9,\n        width: 800,\n        height: 600\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      style: {\n        position: \"absolute\",\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        left: \"0\",\n        right: \"0\",\n        textAlign: \"center\",\n        zindex: 9,\n        width: 800,\n        height: 600\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s(MediapipeHands, \"v4cpjlVQ0JCDZnPWaD3Z9DHNiTM=\");\n_c = MediapipeHands;\nexport default MediapipeHands;\nvar _c;\n$RefreshReg$(_c, \"MediapipeHands\");","map":{"version":3,"names":["React","useRef","useEffect","Webcam","Hands","HAND_CONNECTIONS","drawConnectors","drawLandmarks","Camera","MediapipeHands","webcamRef","canvasRef","hands","locateFile","file","setOptions","maxNumHands","modelComplexity","minDetectionConfidence","minTrackingConfidence","onResults","current","camera","video","onFrame","send","image","width","height","start","results","videoWidth","videoHeight","canvasElement","canvasCtx","getContext","save","clearRect","translate","scale","drawImage","multiHandLandmarks","landmarks","color","lineWidth","restore","position","marginLeft","marginRight","left","right","textAlign","zindex"],"sources":["/Users/younglimmm/AirDrawing/src/MainPage/Component/MediapipeHands.jsx"],"sourcesContent":["import React, { useRef, useEffect } from \"react\";\nimport Webcam from \"react-webcam\";\nimport { Hands, HAND_CONNECTIONS } from \"@mediapipe/hands/hands\";\nimport {\n  drawConnectors,\n  drawLandmarks,\n} from \"@mediapipe/drawing_utils/drawing_utils\";\nimport { Camera } from \"@mediapipe/camera_utils/camera_utils\";\n\n\nfunction MediapipeHands() {\n  \n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n\n  useEffect(() => {\n    const hands = new Hands({\n      locateFile: (file) => {\n        return `https://cdn.jsdelivr.net/npm/@mediapipe/hands@0.3.1626903359/${file}`;\n      }\n    })\n    hands.setOptions({\n      maxNumHands: 1,\n      modelComplexity: 1,\n      minDetectionConfidence: 0.5,\n      minTrackingConfidence: 0.5,\n    });\n    hands.onResults(onResults);\n\n    if (\n      typeof webcamRef.current !== \"undefined\" &&\n      webcamRef.current !== null\n    ) {\n      const camera = new Camera(webcamRef.current.video, {\n        onFrame: async () => {\n          await hands.send({ image: webcamRef.current.video });\n        },\n        width: 1280,\n        height: 720,\n      });\n      camera.start();\n    }\n  }, []);\n\n  const onResults = (results) => {\n    const videoWidth = webcamRef.current.video.videoWidth;\n    const videoHeight = webcamRef.current.video.videoHeight;\n    canvasRef.current.width = videoWidth;\n    canvasRef.current.height = videoHeight;\n    const canvasElement = canvasRef.current;\n    const canvasCtx = canvasElement.getContext(\"2d\");\n    canvasCtx.save();\n    canvasCtx.clearRect(0, 0, videoWidth, videoHeight);\n    canvasCtx.translate(videoWidth, 0);\n    canvasCtx.scale(-1, 1);\n    canvasCtx.drawImage(\n      results.image,\n      0,\n      0,\n      canvasElement.width,\n      canvasElement.height\n    );\n    if (results.multiHandLandmarks) {\n      \n      for (const landmarks of results.multiHandLandmarks) {\n        drawConnectors(canvasCtx, landmarks, HAND_CONNECTIONS, {\n          color: \"#00FF00\",\n          lineWidth: 5,\n        });\n        drawLandmarks(canvasCtx, landmarks, { color: \"#FFFFFF\", lineWidth: 2 });\n      }\n    }\n    canvasCtx.restore();\n  };\n\n  return (\n    <div>\n      <Webcam\n        audio={false}\n        mirrored={true}\n        ref={webcamRef}\n        style={{\n          position: \"absolute\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          left: \"0\",\n          right: \"0\",\n          textAlign: \"center\",\n          zindex: 9,\n          width: 800,\n          height: 600,\n        }}\n      />\n      <canvas\n        ref={canvasRef}\n        style={{\n          position: \"absolute\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          left: \"0\",\n          right: \"0\",\n          textAlign: \"center\",\n          zindex: 9,\n          width: 800,\n          height: 600,\n        }}\n      ></canvas>\n    </div>\n  );\n}\n\nexport default MediapipeHands;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}